

entity Ingredient {
	amount Double
}

entity AlarmTriggerTemplate {
	numberOfSuspiciousActions Integer,
    warningMessage String
}

entity SpamDetectionTemplate {
	numberOfComments Integer,
    rating Integer,
    reason String
}

entity Alarm {
	message String,
    numberOfSuspiciousActions Integer
}

entity DishType {
	name String
}

entity IngredientType {
	name String
}

entity UnitType {
	name String,
    value Double
}

entity IngredientModel {
	name String,
    caloriesPerUnit Double
}

entity Dish {
	name String,
    category DishCategory,
    image Blob,
    description String,
    averageRating Double
}

entity CalorieConfiguration {
	breakfastLow Double,
    breakfastHigh Double,
    lunchLow Double,
    lunchHigh Double,
    dinnerLow Double,
    dinnerHigh Double,
    snackLow Double,
    snackHigh Double
}

entity Rating {
	comment String,
    rating Integer
}


enum DishCategory {
	BREAKFAST, LUNCH, DINNER, SNACK
}

relationship ManyToMany {
    IngredientModel{ingredientTypes(name)} to 
    IngredientType{ingredientModels(name)}
    Dish{users(login)} to User{dishes(name)}
}

relationship OneToMany {
	IngredientModel to Ingredient{ingredientModel(name)} 
  Dish to Ingredient{dish(name)}
  DishType to Dish{dishType(name)}
  Dish to Rating{dish(name)}
  UnitType to IngredientModel{unitType(name)}
  Ingredient{ingredients} to Ingredient{ingredient}
}

relationship ManyToOne {
  Ingredient{user(login)} to User
  Rating{user(login)} to User
}

relationship OneToOne {
	CalorieConfiguration{user(login)} to User
    Alarm{user(login)} to User
}


paginate UnitType, IngredientType, DishType with infinite-scroll
paginate Dish, IngredientModel, Ingredient with pagination

dto * with mapstruct

service all with serviceImpl except CalorieConfiguration

