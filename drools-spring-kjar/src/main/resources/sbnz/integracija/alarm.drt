template header
numberOfSuspiciousActions
warningMessage


package sbnz.integracija;

import sbnz.integracija.chefadvisor.events.UserActionEvent;
import sbnz.integracija.chefadvisor.domain.enumeration.WarningType;
import sbnz.integracija.chefadvisor.facts.AlarmInputFact

declare SuspiciousUserActionEvent
    @role(event)
    userId: Long
    reason: WarningType
end

declare AlarmTriggered
    userId: Long
end

template "alarm-rules"

rule "More than @{numberOfSuspiciousActions} suspicious user actions trigger a potential spammer alarm_@{row.rowNumber}"
	salience $k
    when
    	$aif: AlarmInputFact()
        SuspiciousUserActionEvent($userId: userId)
        not (AlarmTriggered(userId == $userId))
        $k: Number(intValue >= @{numberOfSuspiciousActions}) from accumulate(
            $s: SuspiciousUserActionEvent(userId == $userId),
            count($s)
        )
    then
        System.out.println("@{warningMessage}" + $userId);
        $aif.setUserId($userId);
        $aif.setMessage("@{warningMessage}");
end

end template
