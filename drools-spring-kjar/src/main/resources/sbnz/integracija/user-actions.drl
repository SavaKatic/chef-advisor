package sbnz.integracija;

import sbnz.integracija.chefadvisor.events.UserActionEvent;

declare SuspiciousUserActionEvent
    @role(event)
    userId: Long
    reason: String
end

declare AlarmTriggered
    userId: Long
end

rule "More than 10 comments in an hour from a single user"
    when
        $a1: UserActionEvent($userId: userId)
        Number(intValue >= 10) from accumulate(
            $a2: UserActionEvent(
                this != $a1, 
                userId == $userId, 
                this meets[1h] $a1
            ),
            count($a2)
        )
        not (SuspiciousUserActionEvent(userId == $userId, reason == "Spamming comments"))
    then
        insert(new SuspiciousUserActionEvent($userId, "Spamming comments"));
end

rule "More than 3 bad ratings in an hour from a single user"
    when
        $a1: UserActionEvent(rating < 3, $userId: userId)
        Number(intValue >= 3) from accumulate(
            $a2: UserActionEvent(
                this != $a1, 
                userId == $userId, 
                this meets[1h] $a1
            ),
            count($a2)
        )
        not (SuspiciousUserActionEvent(userId == $userId, reason == "Spamming bad rating"))
    then
        insert(new SuspiciousUserActionEvent($userId, "Spamming bad rating"));
end

rule "More than 2 suspicious user actions trigger a potential spammer alarm"
    when
        SuspiciousUserActionEvent($userId: userId)
        not (AlarmTriggered(userId == $userId))
        Number(intValue >= 0) from accumulate(
            $s: SuspiciousUserActionEvent(userId == $userId),
            count($s)
        )
    then
        System.out.println("WARNING: Potential spammer! " + $userId);
        insert(new AlarmTriggered($userId));
end

