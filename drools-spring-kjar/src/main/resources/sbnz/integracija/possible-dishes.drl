package sbnz.integracija;

import sbnz.integracija.chefadvisor.facts.SearchInputFact
import sbnz.integracija.chefadvisor.facts.SearchResultFact
import sbnz.integracija.chefadvisor.domain.Dish
import sbnz.integracija.chefadvisor.domain.enumeration.DishCategory
import sbnz.integracija.chefadvisor.domain.Ingredient


rule "Find Dishes - non strict mode"
	agenda-group "search"
    when
        $sif: SearchInputFact(strict == false, $dishes: dishes)
        $srf: SearchResultFact($possibleDishes: possibleDishes)
        $d: Dish( category == $sif.category && dishType.name.equals($sif.type) && this not memberOf $possibleDishes ) from $dishes
    then
    	$srf.getPossibleDishes().add($d);
end


rule "Find Dishes - remove strict non-matches"
	salience 1
	agenda-group "search"
	when
		$sif: SearchInputFact( strict == true, $dishes: dishes)
	    $d: Dish( $requiredIngredients: ingredients ) from $dishes
	    $requiredIngredient: Ingredient() from $requiredIngredients
	    SearchInputFact( $requiredIngredient not memberOf fridge )
	then
	    $sif.getDishes().remove($d);
	    update($sif);
end


rule "Adjust dish ingredient calories"
	agenda-group "search"
	when
		SearchInputFact( strict == true, $minimumCalories: minimumCalories, $dishes: dishes)
		$d: Dish( $ingredients: ingredients ) from $dishes
		Number(intValue < $minimumCalories) from accumulate(
							Ingredient(
								$c: ingredientModel.caloriesPerUnit,
								$a: amount
							) from $ingredients,
							sum($a * $c)
					)
		$i: Ingredient() from $ingredients
	then
		$d.increaseIngredients();
end


